#!/usr/bin/env python3

###
# Generates build files for the project.
# This file also includes the project configuration,
# such as compiler flags and the object matching status.
#
# Usage:
#   python3 configure.py
#   ninja
#
# Append --help to see available options.
###

import argparse
import sys
from pathlib import Path
from typing import Any, Dict, List

from tools.project import (
    Object,
    ProgressCategory,
    ProjectConfig,
    calculate_progress,
    generate_build,
    is_windows,
)

# Game versions
DEFAULT_VERSION = 0
VERSIONS = [
    "R8IE78",  # 0
]

parser = argparse.ArgumentParser()
parser.add_argument(
    "mode",
    choices=["configure", "progress"],
    default="configure",
    help="script mode (default: configure)",
    nargs="?",
)
parser.add_argument(
    "-v",
    "--version",
    choices=VERSIONS,
    type=str.upper,
    default=VERSIONS[DEFAULT_VERSION],
    help="version to build",
)
parser.add_argument(
    "--build-dir",
    metavar="DIR",
    type=Path,
    default=Path("build"),
    help="base build directory (default: build)",
)
parser.add_argument(
    "--binutils",
    metavar="BINARY",
    type=Path,
    help="path to binutils (optional)",
)
parser.add_argument(
    "--compilers",
    metavar="DIR",
    type=Path,
    help="path to compilers (optional)",
)
parser.add_argument(
    "--map",
    action="store_true",
    help="generate map file(s)",
)
parser.add_argument(
    "--debug",
    action="store_true",
    help="build with debug info (non-matching)",
)
if not is_windows():
    parser.add_argument(
        "--wrapper",
        metavar="BINARY",
        type=Path,
        help="path to wibo or wine (optional)",
    )
parser.add_argument(
    "--dtk",
    metavar="BINARY | DIR",
    type=Path,
    help="path to decomp-toolkit binary or source (optional)",
)
parser.add_argument(
    "--objdiff",
    metavar="BINARY | DIR",
    type=Path,
    help="path to objdiff-cli binary or source (optional)",
)
parser.add_argument(
    "--sjiswrap",
    metavar="EXE",
    type=Path,
    help="path to sjiswrap.exe (optional)",
)
parser.add_argument(
    "--ninja",
    metavar="BINARY",
    type=Path,
    help="path to ninja binary (optional)"
)
parser.add_argument(
    "--verbose",
    action="store_true",
    help="print verbose output",
)
parser.add_argument(
    "--non-matching",
    dest="non_matching",
    action="store_true",
    help="builds equivalent (but non-matching) or modded objects",
)
parser.add_argument(
    "--warn",
    dest="warn",
    type=str,
    choices=["all", "off", "error"],
    help="how to handle warnings",
)
parser.add_argument(
    "--no-progress",
    dest="progress",
    action="store_false",
    help="disable progress calculation",
)
args = parser.parse_args()

config = ProjectConfig()
config.version = str(args.version)
version_num = VERSIONS.index(config.version)

# Apply arguments
config.build_dir = args.build_dir
config.dtk_path = args.dtk
config.objdiff_path = args.objdiff
config.binutils_path = args.binutils
config.compilers_path = args.compilers
config.generate_map = args.map
config.non_matching = args.non_matching
config.sjiswrap_path = args.sjiswrap
config.ninja_path = args.ninja
config.progress = args.progress
if not is_windows():
    config.wrapper = args.wrapper
# Don't build asm unless we're --non-matching
if not config.non_matching:
    config.asm_dir = None

# Tool versions
config.binutils_tag = "2.42-1"
config.compilers_tag = "20250812"
config.dtk_tag = "v1.6.2"
config.objdiff_tag = "v3.0.0-beta.14"
config.sjiswrap_tag = "v1.2.1"
config.wibo_tag = "0.7.0"

# Project
config.config_path = Path("config") / config.version / "config.yml"
config.check_sha_path = Path("config") / config.version / "build.sha1"
config.asflags = [
    "-mgekko",
    "--strip-local-absolute",
    "-I include",
    f"-I build/{config.version}/include",
    f"--defsym BUILD_VERSION={version_num}",
]
config.ldflags = [
    "-fp hardware",
    "-nodefaults",
]
if args.debug:
    config.ldflags.append("-g")  # Or -gdwarf-2 for Wii linkers
if args.map:
    config.ldflags.append("-mapunused")
    # config.ldflags.append("-listclosure") # For Wii linkers

# Use for any additional files that should cause a re-configure when modified
config.reconfig_deps = []

# Optional numeric ID for decomp.me preset
# Can be overridden in libraries or objects
config.scratch_preset_id = None

# Base flags, common to most GC/Wii games.
# Generally leave untouched, with overrides added below.
cflags_base = [
    "-nodefaults",
    "-proc gekko",
    "-align powerpc",
    "-enum int",
    "-fp hardware",
    "-Cpp_exceptions off",
    # "-W all",
    "-O4,p",
    "-inline auto",
    '-pragma "cats off"',
    '-pragma "warn_notinlined off"',
    "-maxerrors 1",
    "-nosyspath",
    "-RTTI off",
    "-fp_contract on",
    "-str reuse",
    "-enc SJIS",  # For Wii compilers, replace with `-enc SJIS`
    "-i include",
    "-i src",
    f"-i build/{config.version}/include",
    f"-DBUILD_VERSION={version_num}",
    f"-DVERSION_{config.version}",
]

# Debug flags
if args.debug:
    # Or -sym dwarf-2 for Wii compilers
    cflags_base.extend(["-sym dwarf-2", "-DDEBUG=1"])
else:
    cflags_base.append("-DNDEBUG=1")

# Warning flags
if args.warn == "all":
    cflags_base.append("-W all")
elif args.warn == "off":
    cflags_base.append("-W off")
elif args.warn == "error":
    cflags_base.append("-W error")

# Metrowerks library flags
cflags_runtime = [
    *cflags_base,
    "-use_lmw_stmw on",
    "-str reuse,pool,readonly",
    "-gccinc",
    "-common off",
    "-inline auto",
]

# REL flags
cflags_rel = [
    *cflags_base,
    "-sdata 0",
    "-sdata2 0",
]

config.linker_version = "Wii/1.1"


# Helper function for Dolphin libraries
def DolphinLib(lib_name: str, objects: List[Object]) -> Dict[str, Any]:
    return {
        "lib": lib_name,
        "mw_version": "GC/1.2.5n",
        "cflags": cflags_base,
        "progress_category": "sdk",
        "objects": objects,
    }


# Helper function for REL script objects
def Rel(lib_name: str, objects: List[Object]) -> Dict[str, Any]:
    return {
        "lib": lib_name,
        "mw_version": "GC/1.3.2",
        "cflags": cflags_rel,
        "progress_category": "game",
        "objects": objects,
    }


Matching = True                   # Object matches and should be linked
NonMatching = False               # Object does not match and should not be linked
Equivalent = config.non_matching  # Object should be linked when configured with --non-matching


# Object is only matching for specific versions
def MatchingFor(*versions):
    return config.version in versions


config.warn_missing_config = True
config.warn_missing_source = False
config.libs = [
    {
        "lib": "SB",
        "mw_version": config.linker_version,
        "cflags": cflags_base,
        "progress_category": "game",
        "objects": [
            Object(NonMatching, "SB/LinkFastSqrt.cpp"),
            Object(NonMatching, "SB/WadSet1/WAD00.cpp"),
            Object(NonMatching, "SB/WadSet1/WAD01.cpp"),
            Object(NonMatching, "SB/WadSet1/WAD02.cpp"),
            Object(NonMatching, "SB/WadSet1/WAD03.cpp"),
            Object(NonMatching, "SB/WadSet1/WAD04.cpp"),
            Object(NonMatching, "SB/WadSet1/WADSpeed.cpp"),
            Object(NonMatching, "SB/WadSet2/WAD00.cpp"),
            Object(NonMatching, "SB/WadSet2/WAD01.cpp"),
            Object(NonMatching, "SB/WadSet2/WAD02.cpp"),
            Object(NonMatching, "SB/WadSet2/WADSpeed.cpp"),
        ],
    },
    {
        "lib": "Havok",
        "mw_version": config.linker_version,
        "cflags": cflags_base,
        "progress_category": "engine",
        "objects": [
            Object(NonMatching, "HK/hkLogger.cpp"),
            Object(NonMatching, "HK/hkRadixSort.cpp"),
            Object(NonMatching, "HK/hkUnionFind.cpp"),
            Object(NonMatching, "HK/hkArray.cpp"),
            Object(NonMatching, "HK/hkSmallArray.cpp"),
            Object(NonMatching, "HK/hkPointerMapBase.cpp"),
            Object(NonMatching, "HK/hkString.cpp"),
            Object(NonMatching, "HK/hkStringMapBase.cpp"),
            Object(NonMatching, "HK/hkMultiThreadCheck.cpp"),
            Object(NonMatching, "HK/hkMultiThreadCheckClass.cpp"),
            Object(NonMatching, "HK/hkMatchSnapshotStatisticsCollector.cpp"),
            Object(NonMatching, "HK/hkStatisticsCollectorUtil.cpp"),
            Object(NonMatching, "HK/hkStatisticsCollector.cpp"),
            Object(NonMatching, "HK/hkMatrix3.cpp"),
            Object(NonMatching, "HK/hkMatrix6.cpp"),
            Object(NonMatching, "HK/hkRotation.cpp"),
            Object(NonMatching, "HK/hkTransform.cpp"),
            Object(NonMatching, "HK/hkQuaternion.cpp"),
            Object(NonMatching, "HK/hkSweptTransform.cpp"),
            Object(NonMatching, "HK/hkSweptTransformClass.cpp"),
            Object(NonMatching, "HK/hkSweptTransformUtil.cpp"),
            Object(NonMatching, "HK/hkMathTypes.cpp"),
            Object(NonMatching, "HK/hkVector4.cpp"),
            Object(NonMatching, "HK/hkVector4Util.cpp"),
            Object(NonMatching, "HK/hkMath.cpp"),
            Object(NonMatching, "HK/hkFreeList.cpp"),
            Object(NonMatching, "HK/hkFreeListMemory.cpp"),
            Object(NonMatching, "HK/hkFreeListMemoryServer.cpp"),
            Object(NonMatching, "HK/hkPoolMemory.cpp"),
            Object(NonMatching, "HK/hkMemory.cpp"),
            Object(NonMatching, "HK/hkScratchpad.cpp"),
            Object(NonMatching, "HK/hkStackTracer.cpp"),
            Object(NonMatching, "HK/hkDebugMemorySnapshot.cpp"),
            Object(NonMatching, "HK/hkThreadMemory.cpp"),
            Object(NonMatching, "HK/hkMonitorStream.cpp"),
            Object(NonMatching, "HK/hkBaseObjectClass.cpp"),
            Object(NonMatching, "HK/hkReferencedObject.cpp"),
            Object(NonMatching, "HK/hkReferencedObjectClass.cpp"),
            Object(NonMatching, "HK/hkSingleton.cpp"),
            Object(NonMatching, "HK/hkAttributesClass.cpp"),
            Object(NonMatching, "HK/hkDefaultClassNameRegistry.cpp"),
            Object(NonMatching, "HK/hkTypeInfoRegistry.cpp"),
            Object(NonMatching, "HK/hkVtableClassRegistry.cpp"),
            Object(NonMatching, "HK/hkClass.cpp"),
            Object(NonMatching, "HK/hkClassClass.cpp"),
            Object(NonMatching, "HK/hkClassEnum.cpp"),
            Object(NonMatching, "HK/hkClassEnumClass.cpp"),
            Object(NonMatching, "HK/hkClassMember.cpp"),
            Object(NonMatching, "HK/hkClassMemberAccessor.cpp"),
            Object(NonMatching, "HK/hkClassMemberClass.cpp"),
            Object(NonMatching, "HK/hkClassUpdate.cpp"),
            Object(NonMatching, "HK/hkClassVersion1Class.cpp"),
            Object(NonMatching, "HK/hkClassVersion1PaddedClass.cpp"),
            Object(NonMatching, "HK/hkCustomAttributesClass.cpp"),
            Object(NonMatching, "HK/hkDefaultError.cpp"),
            Object(NonMatching, "HK/hkError.cpp"),
            Object(NonMatching, "HK/hkFileSystem.cpp"),
            Object(NonMatching, "HK/hkGameCubeListDirectory.cpp"),
            Object(NonMatching, "HK/hkNativeFileSystem.cpp"),
            Object(NonMatching, "HK/hkIArchive.cpp"),
            Object(NonMatching, "HK/hkOArchive.cpp"),
            Object(NonMatching, "HK/hkOStream.cpp"),
            Object(NonMatching, "HK/hkBufferedStreamReader.cpp"),
            Object(NonMatching, "HK/hkGameCubeDvdStreamReader.cpp"),
            Object(NonMatching, "HK/hkMemoryStreamReader.cpp"),
            Object(NonMatching, "HK/hkStreamReader.cpp"),
            Object(NonMatching, "HK/hkSocket.cpp"),
            Object(NonMatching, "HK/hkBufferedStreamWriter.cpp"),
            Object(NonMatching, "HK/hkWiiStreamWriter.cpp"),
            Object(NonMatching, "HK/hkStopwatch.cpp"),
            Object(NonMatching, "HK/hkSystemClock.cpp"),
            Object(NonMatching, "HK/hkBaseSystem.cpp"),
            Object(NonMatching, "HK/hkJobQueue.cpp"),
            Object(NonMatching, "HK/hkEmptySemaphore.cpp"),
            Object(NonMatching, "HK/hkAabbClass.cpp"),
            Object(NonMatching, "HK/hkLocalFrame.cpp"),
            Object(NonMatching, "HK/hkLocalFrameClass.cpp"),
            Object(NonMatching, "HK/hkMotionState.cpp"),
            Object(NonMatching, "HK/hkMotionStateClass.cpp"),
            Object(NonMatching, "HK/hkBaseTypes.cpp"),
            Object(NonMatching, "HK/hkBaseTypesClass.cpp"),
            # HKP Starts here
            Object(NonMatching, "HK/hkpCdBodyClass.cpp"),
            Object(NonMatching, "HK/hkpCollidable.cpp"),
            Object(NonMatching, "HK/hkpCollidableClass.cpp"),
            Object(NonMatching, "HK/hkpBvTreeAgent.cpp"),
            Object(NonMatching, "HK/hkpMoppAgent.cpp"),
            Object(NonMatching, "HK/hkpBvTreeStreamAgent.cpp"),
            Object(NonMatching, "HK/hkpMoppBvTreeStreamAgent.cpp"),
            Object(NonMatching, "HK/hkpListAgent.cpp"),
            Object(NonMatching, "HK/hkpShapeCollectionAgent.cpp"),
            Object(NonMatching, "HK/hkpBoxBoxAgent.cpp"),
            Object(NonMatching, "HK/hkpCapsuleCapsuleAgent.cpp"),
            Object(NonMatching, "HK/hkpCapsuleTriangleAgent.cpp"),
            Object(NonMatching, "HK/hkpGskBaseAgent.cpp"),
            Object(NonMatching, "HK/hkpGskfAgent.cpp"),
            Object(NonMatching, "HK/hkpPredGskfAgent.cpp"),
            Object(NonMatching, "HK/hkpSphereBoxAgent.cpp"),
            Object(NonMatching, "HK/hkpSphereCapsuleAgent.cpp"),
            Object(NonMatching, "HK/hkpSphereSphereAgent.cpp"),
            Object(NonMatching, "HK/hkpSphereTriangleAgent.cpp"),
            Object(NonMatching, "HK/hkpConvexListAgent.cpp"),
            Object(NonMatching, "HK/hkpMultiSphereAgent.cpp"),
            Object(NonMatching, "HK/hkpMultiSphereTriangleAgent.cpp"),
            Object(NonMatching, "HK/hkpHeightFieldAgent.cpp"),
            Object(NonMatching, "HK/hkpBvAgent.cpp"),
            Object(NonMatching, "HK/hkpMultiRayConvexAgent.cpp"),
            Object(NonMatching, "HK/hkpPhantomAgent.cpp"),
            Object(NonMatching, "HK/hkpTransformAgent.cpp"),
            Object(NonMatching, "HK/hkpIterativeLinearCastAgent.cpp"),
            Object(NonMatching, "HK/hkpNullAgent.cpp"),
            Object(NonMatching, "HK/hkpSymmetricAgentLinearCast.cpp"),
            Object(NonMatching, "HK/hkpCollisionAgent.cpp"),
            Object(NonMatching, "HK/hkpAgent3Bridge.cpp"),
            Object(NonMatching, "HK/hkpNullBroadPhaseListener.cpp"),
            Object(NonMatching, "HK/hkpTypedBroadPhaseDispatcher.cpp"),
            Object(NonMatching, "HK/hkpTypedBroadPhaseHandleClass.cpp"),
            Object(NonMatching, "HK/hkpAgentRegisterUtil.cpp"),
            Object(NonMatching, "HK/hkpCollisionDispatcher.cpp"),
            Object(NonMatching, "HK/hkpDefaultConvexListFilter.cpp"),
            Object(NonMatching, "HK/hkpGroupFilter.cpp"),
            Object(NonMatching, "HK/hkpGroupFilterClass.cpp"),
            Object(NonMatching, "HK/hkpNullCollisionFilter.cpp"),
            Object(NonMatching, "HK/hkpCollisionFilter.cpp"),
            Object(NonMatching, "HK/hkpCollisionFilterClass.cpp"),
            Object(NonMatching, "HK/hkpConvexListFilterClass.cpp"),
            Object(NonMatching, "HK/hkpSimpleWorldRayCaster.cpp"),
            Object(NonMatching, "HK/hkpWorldLinearCaster.cpp"),
            Object(NonMatching, "HK/hkpWorldRayCaster.cpp"),
            Object(NonMatching, "HK/hkpAllCdBodyPairCollector.cpp"),
            Object(NonMatching, "HK/hkpFirstCdBodyPairCollector.cpp"),
            Object(NonMatching, "HK/hkpFlagCdBodyPairCollector.cpp"),
            Object(NonMatching, "HK/hkpKdTreeCollidableRaycaster.cpp"),
            Object(NonMatching, "HK/hkpKdTreeWorldLinearCaster.cpp"),
            Object(NonMatching, "HK/hkpAllCdPointCollector.cpp"),
            Object(NonMatching, "HK/hkpClosestCdPointCollector.cpp"),
            Object(NonMatching, "HK/hkpSimpleClosestContactCollector.cpp"),
            Object(NonMatching, "HK/hkpAllRayHitCollector.cpp"),
            Object(NonMatching, "HK/hkpClosestRayHitCollector.cpp"),
            Object(NonMatching, "HK/hkpCpuKdTreeBuildJob.cpp"),
            Object(NonMatching, "HK/hkpCpuShapeRaycastJob.cpp"),
            Object(NonMatching, "HK/hkpExtendedMeshShape.cpp"),
            Object(NonMatching, "HK/hkpExtendedMeshShapeClass.cpp"),
            Object(NonMatching, "HK/hkpListShape.cpp"),
            Object(NonMatching, "HK/hkpListShapeClass.cpp"),
            Object(NonMatching, "HK/hkpMeshMaterialClass.cpp"),
            Object(NonMatching, "HK/hkpStorageExtendedMeshShape.cpp"),
            Object(NonMatching, "HK/hkpStorageExtendedMeshShapeClass.cpp"),
            Object(NonMatching, "HK/hkpShapeCollection.cpp"),
            Object(NonMatching, "HK/hkpShapeCollectionClass.cpp"),
            Object(NonMatching, "HK/hkpMoppBvTreeShape.cpp"),
            Object(NonMatching, "HK/hkpMoppBvTreeShapeClass.cpp"),
            Object(NonMatching, "HK/hkpMoppCompilerInput.cpp"),
            Object(NonMatching, "HK/hkpMoppUtility.cpp"),
            Object(NonMatching, "HK/hkpBvTreeShapeClass.cpp"),
            Object(NonMatching, "HK/hkpBoxShape.cpp"),
            Object(NonMatching, "HK/hkpBoxShapeClass.cpp"),
            Object(NonMatching, "HK/hkpCapsuleShape.cpp"),
            Object(NonMatching, "HK/hkpCapsuleShapeClass.cpp"),
            Object(NonMatching, "HK/hkpConvexTransformShape.cpp"),
            Object(NonMatching, "HK/hkpConvexTransformShapeClass.cpp"),
            Object(NonMatching, "HK/hkpConvexTranslateShape.cpp"),
            Object(NonMatching, "HK/hkpConvexTranslateShapeClass.cpp"),
            Object(NonMatching, "HK/hkpConvexVerticesConnectivity.cpp"),
            Object(NonMatching, "HK/hkpConvexVerticesConnectivityClass.cpp"),
            Object(NonMatching, "HK/hkpConvexVerticesConnectivityUtil.cpp"),
            Object(NonMatching, "HK/hkpConvexVerticesShape.cpp"),
            Object(NonMatching, "HK/hkpConvexVerticesShapeClass.cpp"),
            Object(NonMatching, "HK/hkpCylinderShape.cpp"),
            Object(NonMatching, "HK/hkpCylinderShapeClass.cpp"),
            Object(NonMatching, "HK/hkpSphereShape.cpp"),
            Object(NonMatching, "HK/hkpSphereShapeClass.cpp"),
            Object(NonMatching, "HK/hkpTriangleShape.cpp"),
            Object(NonMatching, "HK/hkpTriangleShapeClass.cpp"),
            Object(NonMatching, "HK/hkpConvexShape.cpp"),
            Object(NonMatching, "HK/hkpConvexShapeClass.cpp"),
            Object(NonMatching, "HK/hkpConvexPieceShape.cpp"),
            Object(NonMatching, "HK/hkpSphereRepShapeClass.cpp"),
            Object(NonMatching, "HK/hkpConvexListShape.cpp"),
            Object(NonMatching, "HK/hkpConvexListShapeClass.cpp"),
            Object(NonMatching, "HK/hkpTransformShape.cpp"),
            Object(NonMatching, "HK/hkpRayHitCollector.cpp"),
            Object(NonMatching, "HK/hkpShape.cpp"),
            Object(NonMatching, "HK/hkpShapeClass.cpp"),
            Object(NonMatching, "HK/hkpShapeContainer.cpp"),
            Object(NonMatching, "HK/hkpShapeContainerClass.cpp"),
            Object(NonMatching, "HK/hkpShapeType.cpp"),
            Object(NonMatching, "HK/hkpCollidableMediator.cpp"),
            Object(NonMatching, "HK/hkpShapeInfoClass.cpp"),
            Object(NonMatching, "HK/hkpWeldingUtility.cpp"),
            Object(NonMatching, "HK/hkpWeldingUtilityClass.cpp"),
            Object(NonMatching, "HK/hkpWeldingUtilityTableInit.cpp"),
            Object(NonMatching, "HK/hkpAabbUtil.cpp"),
            Object(NonMatching, "HK/hkpTriangleUtil.cpp"),
            Object(NonMatching, "HK/hkpBuildJacobianFromAtoms.cpp"),
            Object(NonMatching, "HK/hkp1dBilateralConstraintBuildJacobian.cpp"),
            Object(NonMatching, "HK/hkpChainBuildJacobian.cpp"),
            Object(NonMatching, "HK/hkpPoweredChainSolverUtil.cpp"),
            Object(NonMatching, "HK/hkpSimpleContactConstraintInfo.cpp"),
            Object(NonMatching, "HK/hkpMotorBuildJacobian.cpp"),
            Object(NonMatching, "HK/hkpJacobianSchema.cpp"),
            Object(NonMatching, "HK/hkpSimpleConstraintUtil.cpp"),
            Object(NonMatching, "HK/hkpSimplexSolver.cpp"),
            Object(NonMatching, "HK/hkpSolver.cpp"),
            Object(NonMatching, "HK/hkpSolverCheck.cpp"),
            Object(NonMatching, "HK/hkpSolverExport.cpp"),
            Object(NonMatching, "HK/hkpSolverGetToiVelocities.cpp"),
            Object(NonMatching, "HK/hkpActionClass.cpp"),
            Object(NonMatching, "HK/hkpArrayAction.cpp"),
            Object(NonMatching, "HK/hkpContactUpdater.cpp"),
            Object(NonMatching, "HK/hkpReportContactMgr.cpp"),
            Object(NonMatching, "HK/hkpResponseModifier.cpp"),
            Object(NonMatching, "HK/hkpSimpleConstraintContactMgr.cpp"),
            Object(NonMatching, "HK/hkpMaterialClass.cpp"),
            Object(NonMatching, "HK/hkpPropertyClass.cpp"),
            Object(NonMatching, "HK/hkpConstraintAtom.cpp"),
            Object(NonMatching, "HK/hkpConstraintAtomClass.cpp"),
            Object(NonMatching, "HK/hkpConstraintAtomUtil.cpp"),
            Object(NonMatching, "HK/hkpBallAndSocketConstraintData.cpp"),
            Object(NonMatching, "HK/hkpBallAndSocketConstraintDataClass.cpp"),
            Object(NonMatching, "HK/hkpHingeConstraintData.cpp"),
            Object(NonMatching, "HK/hkpHingeConstraintDataClass.cpp"),
            Object(NonMatching, "HK/hkpLimitedHingeConstraintData.cpp"),
            Object(NonMatching, "HK/hkpLimitedHingeConstraintDataClass.cpp"),
            Object(NonMatching, "HK/hkpPointToPathConstraintData.cpp"),
            Object(NonMatching, "HK/hkpPointToPlaneConstraintData.cpp"),
            Object(NonMatching, "HK/hkpPrismaticConstraintData.cpp"),
            Object(NonMatching, "HK/hkpPrismaticConstraintDataClass.cpp"),
            Object(NonMatching, "HK/hkpRagdollConstraintData.cpp"),
            Object(NonMatching, "HK/hkpRagdollConstraintDataClass.cpp"),
            Object(NonMatching, "HK/hkpStiffSpringConstraintData.cpp"),
            Object(NonMatching, "HK/hkpStiffSpringConstraintDataClass.cpp"),
            Object(NonMatching, "HK/hkpWheelConstraintData.cpp"),
            Object(NonMatching, "HK/hkpWheelConstraintDataClass.cpp"),
            Object(NonMatching, "HK/hkpBreakableConstraintData.cpp"),
            Object(NonMatching, "HK/hkpBreakableConstraintDataClass.cpp"),
            Object(NonMatching, "HK/hkpHingeLimitsData.cpp"),
            Object(NonMatching, "HK/hkpRagdollLimitsData.cpp"),
            Object(NonMatching, "HK/hkpConstraintChainInstance.cpp"),
            Object(NonMatching, "HK/hkpSimpleContactConstraintData.cpp"),
            Object(NonMatching, "HK/hkpSimpleContactConstraintInfoClass.cpp"),
            Object(NonMatching, "HK/hkpMalleableConstraintData.cpp"),
            Object(NonMatching, "HK/hkpMalleableConstraintDataClass.cpp"),
            Object(NonMatching, "HK/hkpConstraintMotorClass.cpp"),
            Object(NonMatching, "HK/hkpPulleyConstraintData.cpp"),
            Object(NonMatching, "HK/hkpSimpleCollisionResponse.cpp"),
            Object(NonMatching, "HK/hkpConstraintSolverSetup.cpp"),
            Object(NonMatching, "HK/hkpConstraintCallbackUtil.cpp"),
            Object(NonMatching, "HK/hkpConstraintDataCloningUtil.cpp"),
            Object(NonMatching, "HK/hkpConstraintData.cpp"),
            Object(NonMatching, "HK/hkpConstraintDataClass.cpp"),
            Object(NonMatching, "HK/hkpConstraintInstance.cpp"),
            Object(NonMatching, "HK/hkpConstraintInstanceClass.cpp"),
            Object(NonMatching, "HK/hkpEntityAabbUtil.cpp"),
            Object(NonMatching, "HK/hkpEntityCallbackUtil.cpp"),
            Object(NonMatching, "HK/hkpEntity.cpp"),
            Object(NonMatching, "HK/hkpEntityClass.cpp"),
            Object(NonMatching, "HK/hkpEntityDeactivatorClass.cpp"),
            Object(NonMatching, "HK/hkpRigidBody.cpp"),
            Object(NonMatching, "HK/hkpRigidBodyCinfo.cpp"),
            Object(NonMatching, "HK/hkpRigidBodyClass.cpp"),
            Object(NonMatching, "HK/hkpRigidBodyDeactivatorClass.cpp"),
            Object(NonMatching, "HK/hkpThinBoxMotion.cpp"),
            Object(NonMatching, "HK/hkpBoxMotion.cpp"),
            Object(NonMatching, "HK/hkpCharacterMotion.cpp"),
            Object(NonMatching, "HK/hkpFixedRigidMotion.cpp"),
            Object(NonMatching, "HK/hkpKeyframedRigidMotion.cpp"),
            Object(NonMatching, "HK/hkpKeyframedRigidMotionClass.cpp"),
            Object(NonMatching, "HK/hkpSphereMotion.cpp"),
            Object(NonMatching, "HK/hkpStabilizedBoxMotion.cpp"),
            Object(NonMatching, "HK/hkpRigidMotionUtil.cpp"),
            Object(NonMatching, "HK/hkpMotion.cpp"),
            Object(NonMatching, "HK/hkpMotionClass.cpp"),
            Object(NonMatching, "HK/hkpAabbPhantom.cpp"),
            Object(NonMatching, "HK/hkpCachingShapePhantom.cpp"),
            Object(NonMatching, "HK/hkpPhantom.cpp"),
            Object(NonMatching, "HK/hkpPhantomBroadPhaseListener.cpp"),
            Object(NonMatching, "HK/hkpPhantomClass.cpp"),
            Object(NonMatching, "HK/hkpShapePhantom.cpp"),
            Object(NonMatching, "HK/hkpShapePhantomClass.cpp"),
            Object(NonMatching, "HK/hkpSimpleShapePhantom.cpp"),
            Object(NonMatching, "HK/hkpSimpleShapePhantomClass.cpp"),
            Object(NonMatching, "HK/hkpBroadPhaseBorder.cpp"),
            Object(NonMatching, "HK/hkpDefaultWorldMaintenanceMgr.cpp"),
            Object(NonMatching, "HK/hkpWorldMemoryAvailableWatchDogClass.cpp"),
            Object(NonMatching, "HK/hkpBackstepSimulation.cpp"),
            Object(NonMatching, "HK/hkpSimulation.cpp"),
            Object(NonMatching, "HK/hkpSimulationClass.cpp"),
            Object(NonMatching, "HK/hkpBroadPhaseBorderListener.cpp"),
            Object(NonMatching, "HK/hkpEntityEntityBroadPhaseListener.cpp"),
            Object(NonMatching, "HK/hkpKdTreeWorldManager.cpp"),
            Object(NonMatching, "HK/hkpWorldAgentUtil.cpp"),
            Object(NonMatching, "HK/hkpWorldCallbackUtil.cpp"),
            Object(NonMatching, "HK/hkpWorldConstraintUtil.cpp"),
            Object(NonMatching, "HK/hkpWorldOperationQueue.cpp"),
            Object(NonMatching, "HK/hkpWorldOperationUtil.cpp"),
            Object(NonMatching, "HK/hkpPhysicsSystem.cpp"),
            Object(NonMatching, "HK/hkpPhysicsSystemClass.cpp"),
            Object(NonMatching, "HK/hkpSimulationIsland.cpp"),
            Object(NonMatching, "HK/hkpWorld.cpp"),
            Object(NonMatching, "HK/hkpWorldCinfo.cpp"),
            Object(NonMatching, "HK/hkpWorldCinfoClass.cpp"),
            Object(NonMatching, "HK/hkpWorldClass.cpp"),
            Object(NonMatching, "HK/hkpWorldObject.cpp"),
            Object(NonMatching, "HK/hkpWorldObjectClass.cpp"),
            Object(NonMatching, "HK/hkpBoxBoxAgent3.cpp"),
            Object(NonMatching, "HK/hkpBvTreeAgent3.cpp"),
            Object(NonMatching, "HK/hkpCapsuleTriangleAgent3.cpp"),
            Object(NonMatching, "HK/hkpCollectionAgent3.cpp"),
            Object(NonMatching, "HK/hkpCollectionCollectionAgent3.cpp"),
            Object(NonMatching, "HK/hkpConvexListAgent3.cpp"),
            Object(NonMatching, "HK/hkpListAgent3.cpp"),
            Object(NonMatching, "HK/hkpAgent1nMachine.cpp"),
            Object(NonMatching, "HK/hkpAgent1nMachineProcess.cpp"),
            Object(NonMatching, "HK/hkpAgentNnMachine.cpp"),
            Object(NonMatching, "HK/hkpLinkedCollidableClass.cpp"),
            Object(NonMatching, "HK/hkpAgentMachineUtil.cpp"),
            Object(NonMatching, "HK/hkpPredGskAgent3.cpp"),
            Object(NonMatching, "HK/hkpPredGskCylinderAgent3.cpp"),
            Object(NonMatching, "HK/hkpBoxBoxCollisionDetection.cpp"),
            Object(NonMatching, "HK/hkpBoxBoxManifold.cpp"),
            Object(NonMatching, "HK/hkp3AxisSweep.cpp"),
            Object(NonMatching, "HK/hkpBroadPhase.cpp"),
            Object(NonMatching, "HK/hkpBroadPhaseHandleClass.cpp"),
            Object(NonMatching, "HK/hkpGskAgentUtil.cpp"),
            Object(NonMatching, "HK/hkpContinuousGsk.cpp"),
            Object(NonMatching, "HK/hkpGskManifoldUtil.cpp"),
            Object(NonMatching, "HK/hkpConvexPenetrationUtil.cpp"),
            Object(NonMatching, "HK/hkpCvxCvxDistByHeuristicSampling.cpp"),
            Object(NonMatching, "HK/hkpWingedEdge.cpp"),
            Object(NonMatching, "HK/hkpGjk.cpp"),
            Object(NonMatching, "HK/hkpGsk.cpp"),
            Object(NonMatching, "HK/hkpGskCache.cpp"),
            Object(NonMatching, "HK/hkpMoppCodeGenerator.cpp"),
            Object(NonMatching, "HK/hkpMoppDefaultAssembler.cpp"),
            Object(NonMatching, "HK/hkpMoppCompiler.cpp"),
            Object(NonMatching, "HK/hkpMoppCachedShapeMediator.cpp"),
            Object(NonMatching, "HK/hkpMoppShapeMediator.cpp"),
            Object(NonMatching, "HK/hkpMoppCostFunction.cpp"),
            Object(NonMatching, "HK/hkpMoppDefaultSplitter.cpp"),
            Object(NonMatching, "HK/hkpMoppSplitter.cpp"),
            Object(NonMatching, "HK/hkpMoppCodeClass.cpp"),
            Object(NonMatching, "HK/hkpMoppAabbCastVirtualMachine.cpp"),
            Object(NonMatching, "HK/hkpMoppLongRayVirtualMachine.cpp"),
            Object(NonMatching, "HK/hkpMoppMachine.cpp"),
            Object(NonMatching, "HK/hkpMoppObbVirtualMachine.cpp"),
            Object(NonMatching, "HK/hkpMoppRayBundleVirtualMachine.cpp"),
            Object(NonMatching, "HK/hkpCollideCapsuleUtil.cpp"),
            Object(NonMatching, "HK/hkpCollideTriangleUtil.cpp"),
            Object(NonMatching, "HK/hkpDefaultToiResourceMgr.cpp"),
            Object(NonMatching, "HK/hkpContinuousSimulation.cpp"),
            Object(NonMatching, "HK/hkpPrevailingWind.cpp"),
            Object(NonMatching, "HK/hkpCharacterProxy.cpp"),
            Object(NonMatching, "HK/hkpCharacterProxyCinfoClass.cpp"),
            Object(NonMatching, "HK/hkpCharacterRigidBody.cpp"),
            Object(NonMatching, "HK/hkpConstraintCollisionFilter.cpp"),
            Object(NonMatching, "HK/hkpShapeShrinker.cpp"),
            Object(NonMatching, "HK/hkpKeyFrameUtility.cpp"),
            Object(NonMatching, "HK/hkpInertiaTensorComputer.cpp"),
            Object(NonMatching, "HK/hkpPhysicsData.cpp"),
            Object(NonMatching, "HK/hkpPhysicsDataClass.cpp"),
            Object(NonMatching, "HK/hkObjectCopier.cpp"),
            Object(NonMatching, "HK/hkBinaryPackfileReader.cpp"),
            Object(NonMatching, "HK/hkPackfileHeaderClass.cpp"),
            Object(NonMatching, "HK/hkPackfileSectionHeader.cpp"),
            Object(NonMatching, "HK/hkPackfileSectionHeaderClass.cpp"),
            Object(NonMatching, "HK/hkPackfileData.cpp"),
            Object(NonMatching, "HK/hkPackfileReader.cpp"),
            Object(NonMatching, "HK/hkResourceHandle.cpp"),
            Object(NonMatching, "HK/hkResourceHandleClass.cpp"),
            Object(NonMatching, "HK/hkRelocationInfo.cpp"),
            Object(NonMatching, "HK/hkBinaryTagfileWriter.cpp"),
            Object(NonMatching, "HK/hkTextTagfileWriter.cpp"),
            Object(NonMatching, "HK/hkBindingClassNameRegistry.cpp"),
            Object(NonMatching, "HK/hkBuiltinTypeRegistry.cpp"),
            Object(NonMatching, "HK/hkChainedClassNameRegistry.cpp"),
            Object(NonMatching, "HK/hkObjectInspector.cpp"),
            Object(NonMatching, "HK/hkRootLevelContainer.cpp"),
            Object(NonMatching, "HK/hkRootLevelContainerClass.cpp"),
            Object(NonMatching, "HK/hkStaticClassNameRegistry.cpp"),
            Object(NonMatching, "HK/hkStructureLayout.cpp"),
            Object(NonMatching, "HK/hkVersionCheckingUtils.cpp"),
            Object(NonMatching, "HK/hkVersionRegistry.cpp"),
            Object(NonMatching, "HK/hkVersionUtil.cpp"),
            Object(NonMatching, "HK/hk1AxisSweep.cpp"),
            Object(NonMatching, "HK/hkGeomConvexHullBuilder.cpp"),
            Object(NonMatching, "HK/hkGeomConvexHullTester.cpp"),
            Object(NonMatching, "HK/hkGeomHull.cpp"),
            Object(NonMatching, "HK/hkGeometryUtility.cpp"),
            Object(NonMatching, "HK/hkKdTreeBuilder.cpp"),
            Object(NonMatching, "HK/hkKdTreeBuildingUtils.cpp"),
            Object(NonMatching, "HK/hkKdTreeAabbCastUtils.cpp"),
            Object(NonMatching, "HK/hkKdTreeUtils.cpp"),
            Object(NonMatching, "HK/hkKdTree.cpp"),
            Object(NonMatching, "HK/hkLineSegmentUtil.cpp"),
            Object(NonMatching, "HK/hkSystemTime.cpp"),
        ],
    },
    {
        "lib": "Revolution",
        "mw_version": config.linker_version,
        "cflags": cflags_runtime,
        "progress_category": "Rev SDK",  # str | List[str]
        "objects": [
            Object(NonMatching, "revolution/src/ai/ai.c"),
            Object(NonMatching, "revolution/src/arc/arc.c"),
            Object(NonMatching, "revolution/src/ax/AX.c"),
            Object(NonMatching, "revolution/src/ax/AXAlloc.c"),
            Object(NonMatching, "revolution/src/ax/AXAux.c"),
            Object(NonMatching, "revolution/src/ax/AXCL.c"),
            Object(NonMatching, "revolution/src/ax/AXOut.c"),
            Object(NonMatching, "revolution/src/ax/AXSPB.c"),
            Object(NonMatching, "revolution/src/ax/AXVPB.c"),
            Object(NonMatching, "revolution/src/ax/AXComp.c"),
            Object(NonMatching, "revolution/src/dsp/DSPCode.c"),
            Object(NonMatching, "revolution/src/ax/AXProf.c"),
            Object(NonMatching, "revolution/src/axfx/AXFXReverbHi.c"),
            Object(NonMatching, "revolution/src/axfx/AXFXReverbHiDpl2.c"),
            Object(NonMatching, "revolution/src/axfx/AXFXReverbHiExp.c"),
            Object(NonMatching, "revolution/src/axfx/AXFXReverbHiExpDpl2.c"),
            Object(NonMatching, "revolution/src/axfx/AXFXReverbStd.c"),
            Object(NonMatching, "revolution/src/axfx/AXFXReverbStdExp.c"),
            Object(NonMatching, "revolution/src/axfx/AXFXHooks.c"),
            Object(NonMatching, "revolution/src/db/db.c"),
            Object(NonMatching, "revolution/src/dsp/dsp.c"),
            Object(NonMatching, "revolution/src/dsp/dsp_debug.c"),
            Object(NonMatching, "revolution/src/dsp/dsp_task.c"),
            Object(NonMatching, "revolution/src/esp/esp.c"),
            Object(NonMatching, "revolution/src/dvd/dvdfs.c"),
            Object(NonMatching, "revolution/src/dvd/dvd.c"),
            Object(NonMatching, "revolution/src/dvd/dvdqueue.c"),
            Object(NonMatching, "revolution/src/dvd/dvderror.c"),
            Object(NonMatching, "revolution/src/dvd/dvdidutils.c"),
            Object(NonMatching, "revolution/src/dvd/dvdFatal.c"),
            Object(NonMatching, "revolution/src/dvd/dvdDeviceError.c"),
            Object(NonMatching, "revolution/src/dvd/dvd_broadway.c"),
            Object(NonMatching, "revolution/src/mem/mem_heapCommon.c"),
            Object(NonMatching, "revolution/src/mem/mem_expHeap.c"),
            Object(NonMatching, "revolution/src/mem/mem_frameHeap.c"),
            Object(NonMatching, "revolution/src/mem/mem_allocator.c"),
            Object(NonMatching, "revolution/src/mem/mem_list.c"),
            Object(NonMatching, "revolution/src/exi/EXIBios.c"),
            Object(NonMatching, "revolution/src/exi/EXIUart.c"),
            Object(NonMatching, "revolution/src/exi/EXICommon.c"),
            Object(NonMatching, "revolution/src/si/SIBios.c"),
            Object(NonMatching, "revolution/src/si/SISamplingRate.c"),
            Object(NonMatching, "revolution/src/vi/vi.c"),
            Object(NonMatching, "revolution/src/vi/i2c.c"),
            Object(NonMatching, "revolution/src/vi/vi3in1.c"),
            Object(NonMatching, "revolution/src/gx/GXInit.c"),
            Object(NonMatching, "revolution/src/gx/GXFifo.c"),
            Object(NonMatching, "revolution/src/gx/GXAttr.c"),
            Object(NonMatching, "revolution/src/gx/GXMisc.c"),
            Object(NonMatching, "revolution/src/gx/GXGeometry.c"),
            Object(NonMatching, "revolution/src/gx/GXFrameBuf.c"),
            Object(NonMatching, "revolution/src/gx/GXLight.c"),
            Object(NonMatching, "revolution/src/gx/GXTexture.c"),
            Object(NonMatching, "revolution/src/gx/GXBump.c"),
            Object(NonMatching, "revolution/src/gx/GXTev.c"),
            Object(NonMatching, "revolution/src/gx/GXPixel.c"),
            Object(NonMatching, "revolution/src/gx/GXDisplayList.c"),
            Object(NonMatching, "revolution/src/gx/GXTransform.c"),
            Object(NonMatching, "revolution/src/gx/GXPerf.c"),
            Object(NonMatching, "revolution/src/mtx/mtx.c"),
            Object(NonMatching, "revolution/src/mtx/mtxvec.c"),
            Object(NonMatching, "revolution/src/mtx/mtx44.c"),
            Object(NonMatching, "revolution/src/mtx/vec.c"),
            Object(NonMatching, "revolution/src/nand/nand.c"),
            Object(NonMatching, "revolution/src/nand/NANDOpenClose.c"),
            Object(NonMatching, "revolution/src/nand/NANDCore.c"),
            Object(NonMatching, "revolution/src/nand/NANDCheck.c"),
            Object(NonMatching, "revolution/src/nand/NANDLogging.c"),
            Object(NonMatching, "revolution/src/sc/scsystem.c"),
            Object(NonMatching, "revolution/src/sc/scapi.c"),
            Object(NonMatching, "revolution/src/sc/scapi_prdinfo.c"),
            Object(NonMatching, "revolution/src/pad/Pad.c"),
            Object(NonMatching, "revolution/src/wpad/WPAD.c"),
            Object(NonMatching, "revolution/src/wpad/WPADHIDParser.c"),
            Object(NonMatching, "revolution/src/wpad/WPADEncrypt.c"),
            Object(NonMatching, "revolution/src/wpad/WPADMem.c"),
            Object(NonMatching, "revolution/src/wpad/lint.c"),
            Object(NonMatching, "revolution/src/wpad/WUD.c"),
            Object(NonMatching, "revolution/src/wpad/WUDHIDHost.c"),
            Object(NonMatching, "revolution/src/kpad/KPAD.c"),
            Object(NonMatching, "revolution/src/kpad/KMPLS.cpp"),
            Object(NonMatching, "revolution/src/kpad/KZMplsTestSub.cpp"),
            Object(NonMatching, "revolution/src/usb/usb.c"),
            Object(NonMatching, "revolution/src/os/OS.c"),
            Object(NonMatching, "revolution/src/os/OSAlarm.c"),
            Object(NonMatching, "revolution/src/os/OSAlloc.c"),
            Object(NonMatching, "revolution/src/os/OSArena.c"),
            Object(NonMatching, "revolution/src/os/OSAudioSystem.c"),
            Object(NonMatching, "revolution/src/os/OSCache.c"),
            Object(NonMatching, "revolution/src/os/OSContext.c"),
            Object(NonMatching, "revolution/src/os/OSError.c"),
            Object(NonMatching, "revolution/src/os/OSExec.c"),
            Object(NonMatching, "revolution/src/os/OSFatal.c"),
            Object(NonMatching, "revolution/src/os/OSFont.c"),
            Object(NonMatching, "revolution/src/os/OSInterrupt.c"),
            Object(NonMatching, "revolution/src/os/OSLink.c"),
            Object(NonMatching, "revolution/src/os/OSMessage.c"),
            Object(NonMatching, "revolution/src/os/OSMemory.c"),
            Object(NonMatching, "revolution/src/os/OSMutex.c"),
            Object(NonMatching, "revolution/src/os/OSReboot.c"),
            Object(NonMatching, "revolution/src/os/OSReset.c"),
            Object(NonMatching, "revolution/src/os/OSRtc.c"),
            Object(NonMatching, "revolution/src/os/OSSemaphore.c"),
            Object(NonMatching, "revolution/src/os/OSSync.c"),
            Object(NonMatching, "revolution/src/os/OSThread.c"),
            Object(NonMatching, "revolution/src/os/OSTime.c"),
            Object(NonMatching, "revolution/src/os/OSUtf.c"),
            Object(NonMatching, "revolution/src/os/OSIpc.c"),
            Object(NonMatching, "revolution/src/os/OSStateTM.c"),
            Object(NonMatching, "revolution/src/os/__start.c"),
            Object(NonMatching, "revolution/src/os/OSPlayRecord.c"),
            Object(NonMatching, "revolution/src/os/OSStateFlags.c"),
            Object(NonMatching, "revolution/src/os/OSNet.c"),
            Object(NonMatching, "revolution/src/os/OSNandbootInfo.c"),
            Object(NonMatching, "revolution/src/os/OSPlayTime.c"),
            Object(NonMatching, "revolution/src/os/OSCrc.c"),
            Object(NonMatching, "revolution/src/os/OSLaunch.c"),
            Object(NonMatching, "revolution/src/os/__ppc_eabi_init.cpp"),
            Object(NonMatching, "revolution/src/base/PPCArch.c"),
            Object(NonMatching, "revolution/src/bte/gki_buffer.c"),
            Object(NonMatching, "revolution/src/bte/gki_time.c"),
            Object(NonMatching, "revolution/src/bte/gki_ppc.c"),
            Object(NonMatching, "revolution/src/bte/hcisu_h2.c"),
            Object(NonMatching, "revolution/src/bte/uusb_ppc.c"),
            Object(NonMatching, "revolution/src/bte/bta_dm_cfg.c"),
            Object(NonMatching, "revolution/src/bte/bta_hh_cfg.c"),
            Object(NonMatching, "revolution/src/bte/bta_sys_cfg.c"),
            Object(NonMatching, "revolution/src/bte/bte_hcisu.c"),
            Object(NonMatching, "revolution/src/bte/bte_init.c"),
            Object(NonMatching, "revolution/src/bte/bte_logmsg.c"),
            Object(NonMatching, "revolution/src/bte/bte_main.c"),
            Object(NonMatching, "revolution/src/bte/btu_task1.c"),
            Object(NonMatching, "revolution/src/bte/bd.c"),
            Object(NonMatching, "revolution/src/bte/bta_sys_conn.c"),
            Object(NonMatching, "revolution/src/bte/bta_sys_main.c"),
            Object(NonMatching, "revolution/src/bte/ptim.c"),
            Object(NonMatching, "revolution/src/bte/utl.c"),
            Object(NonMatching, "revolution/src/bte/bta_dm_act.c"),
            Object(NonMatching, "revolution/src/bte/bta_dm_api.c"),
            Object(NonMatching, "revolution/src/bte/bta_dm_main.c"),
            Object(NonMatching, "revolution/src/bte/bta_dm_pm.c"),
            Object(NonMatching, "revolution/src/bte/bta_hh_act.c"),
            Object(NonMatching, "revolution/src/bte/bta_hh_api.c"),
            Object(NonMatching, "revolution/src/bte/bta_hh_main.c"),
            Object(NonMatching, "revolution/src/bte/bta_hh_utils.c"),
            Object(NonMatching, "revolution/src/bte/btm_acl.c"),
            Object(NonMatching, "revolution/src/bte/btm_dev.c"),
            Object(NonMatching, "revolution/src/bte/btm_devctl.c"),
            Object(NonMatching, "revolution/src/bte/btm_discovery.c"),
            Object(NonMatching, "revolution/src/bte/btm_inq.c"),
            Object(NonMatching, "revolution/src/bte/btm_main.c"),
            Object(NonMatching, "revolution/src/bte/btm_pm.c"),
            Object(NonMatching, "revolution/src/bte/btm_sco.c"),
            Object(NonMatching, "revolution/src/bte/btm_sec.c"),
            Object(NonMatching, "revolution/src/bte/btu_hcif.c"),
            Object(NonMatching, "revolution/src/bte/btu_init.c"),
            Object(NonMatching, "revolution/src/bte/wbt_ext.c"),
            Object(NonMatching, "revolution/src/bte/gap_api.c"),
            Object(NonMatching, "revolution/src/bte/gap_conn.c"),
            Object(NonMatching, "revolution/src/bte/gap_utils.c"),
            Object(NonMatching, "revolution/src/bte/hcicmds.c"),
            Object(NonMatching, "revolution/src/bte/hidd_api.c"),
            Object(NonMatching, "revolution/src/bte/hidd_conn.c"),
            Object(NonMatching, "revolution/src/bte/hidd_mgmt.c"),
            Object(NonMatching, "revolution/src/bte/hidd_pm.c"),
            Object(NonMatching, "revolution/src/bte/hidh_api.c"),
            Object(NonMatching, "revolution/src/bte/hidh_conn.c"),
            Object(NonMatching, "revolution/src/bte/l2c_api.c"),
            Object(NonMatching, "revolution/src/bte/l2c_csm.c"),
            Object(NonMatching, "revolution/src/bte/l2c_link.c"),
            Object(NonMatching, "revolution/src/bte/l2c_main.c"),
            Object(NonMatching, "revolution/src/bte/l2c_utils.c"),
            Object(NonMatching, "revolution/src/bte/port_api.c"),
            Object(NonMatching, "revolution/src/bte/port_rfc.c"),
            Object(NonMatching, "revolution/src/bte/port_utils.c"),
            Object(NonMatching, "revolution/src/bte/rfc_l2cap_if.c"),
            Object(NonMatching, "revolution/src/bte/rfc_mx_fsm.c"),
            Object(NonMatching, "revolution/src/bte/rfc_port_fsm.c"),
            Object(NonMatching, "revolution/src/bte/rfc_port_if.c"),
            Object(NonMatching, "revolution/src/bte/rfc_ts_frames.c"),
            Object(NonMatching, "revolution/src/bte/rfc_utils.c"),
            Object(NonMatching, "revolution/src/bte/sdp_api.c"),
            Object(NonMatching, "revolution/src/bte/sdp_db.c"),
            Object(NonMatching, "revolution/src/bte/sdp_discovery.c"),
            Object(NonMatching, "revolution/src/bte/sdp_main.c"),
            Object(NonMatching, "revolution/src/bte/sdp_server.c"),
            Object(NonMatching, "revolution/src/bte/sdp_utils.c"),
            Object(NonMatching, "revolution/src/ipc/ipcMain.c"),
            Object(NonMatching, "revolution/src/ipc/ipcclt.c"),
            Object(NonMatching, "revolution/src/ipc/memory.c"),
            Object(NonMatching, "revolution/src/ipc/ipcProfile.c"),
            Object(NonMatching, "revolution/src/fs/fs.c"),
            Object(NonMatching, "revolution/src/euart/euart.c"),
            Object(NonMatching, "revolution/src/wenc/wenc.c"),
            Object(NonMatching, "revolution/src/tpl/TPL.c"),
            Object(NonMatching, "NdevExi2A/DebuggerDriver.c"),
            Object(NonMatching, "NdevExi2A/exi2.c"),
        ],
    },
    {
        "lib": "hbm",
        "mw_version": "Wii/1.0",
        "cflags": cflags_runtime,
        "progress_category": "Rev SDK",
        "host": False,
        "objects": [
            Object(NonMatching, "hbm/src/homebutton/HBMFrameController.cpp"),
            Object(NonMatching, "hbm/src/homebutton/HBMAnmController.cpp"),
            Object(NonMatching, "hbm/src/homebutton/HBMGUIManager.cpp"),
            Object(NonMatching, "hbm/src/homebutton/HBMController.cpp"),
            Object(NonMatching, "hbm/src/homebutton/HBMRemoteSpk.cpp"),
            Object(NonMatching, "hbm/src/homebutton/HBMAxSound.cpp"),
            Object(NonMatching, "hbm/src/homebutton/HBMCommon.cpp"),
            Object(NonMatching, "hbm/src/homebutton/HBMBase.cpp"),
            Object(NonMatching, "hbm/src/sound/mix.cpp"),
            Object(NonMatching, "hbm/src/sound/syn.cpp"),
            Object(NonMatching, "hbm/src/sound/synctrl.cpp"),
            Object(NonMatching, "hbm/src/sound/synenv.cpp"),
            Object(NonMatching, "hbm/src/sound/synmix.cpp"),
            Object(NonMatching, "hbm/src/sound/synpitch.cpp"),
            Object(NonMatching, "hbm/src/sound/synsample.cpp"),
            Object(NonMatching, "hbm/src/sound/synvoice.cpp"),
            Object(NonMatching, "hbm/src/sound/seq.cpp"),
        ],
    },
    {
        "lib": "hbm",
        "mw_version": "Wii/1.0",
        "cflags": cflags_runtime,
        "progress_category": "Rev SDK",
        "objects": [
            Object(NonMatching, "hbm/src/nw4hbm/lyt/lyt_animation.cpp"),
            Object(NonMatching, "hbm/src/nw4hbm/lyt/lyt_arcResourceAccessor.cpp"),
            Object(NonMatching, "hbm/src/nw4hbm/lyt/lyt_bounding.cpp"),
            Object(NonMatching, "hbm/src/nw4hbm/lyt/lyt_common.cpp"),
            Object(NonMatching, "hbm/src/nw4hbm/lyt/lyt_drawInfo.cpp"),
            Object(NonMatching, "hbm/src/nw4hbm/lyt/lyt_group.cpp"),
            Object(NonMatching, "hbm/src/nw4hbm/lyt/lyt_layout.cpp"),
            Object(NonMatching, "hbm/src/nw4hbm/lyt/lyt_material.cpp"),
            Object(NonMatching, "hbm/src/nw4hbm/lyt/lyt_pane.cpp"),
            Object(NonMatching, "hbm/src/nw4hbm/lyt/lyt_picture.cpp"),
            Object(NonMatching, "hbm/src/nw4hbm/lyt/lyt_resourceAccessor.cpp"),
            Object(NonMatching, "hbm/src/nw4hbm/lyt/lyt_textBox.cpp"),
            Object(NonMatching, "hbm/src/nw4hbm/lyt/lyt_window.cpp"),
            Object(NonMatching, "hbm/src/nw4hbm/math/math_triangular.cpp"),
            Object(NonMatching, "hbm/src/nw4hbm/ut/ut_binaryFileFormat.cpp"),
            Object(NonMatching, "hbm/src/nw4hbm/ut/ut_CharStrmReader.cpp"),
            Object(NonMatching, "hbm/src/nw4hbm/ut/ut_CharWriter.cpp"),
            Object(NonMatching, "hbm/src/nw4hbm/ut/ut_Font.cpp"),
            Object(NonMatching, "hbm/src/nw4hbm/ut/ut_LinkList.cpp"),
            Object(NonMatching, "hbm/src/nw4hbm/ut/ut_list.cpp"),
            Object(NonMatching, "hbm/src/nw4hbm/ut/ut_ResFont.cpp"),
            Object(NonMatching, "hbm/src/nw4hbm/ut/ut_ResFontBase.cpp"),
            Object(NonMatching, "hbm/src/nw4hbm/ut/ut_TagProcessorBase.cpp"),
            Object(NonMatching, "hbm/src/nw4hbm/ut/ut_TextWriterBase.cpp"),
        ],
    },
    {
        "lib": "fmod",
        "mw_version": config.linker_version,
        "cflags": cflags_runtime,
        "progress_category": "sdk",  # str | List[str]
        "objects": [
            Object(NonMatching, "fmod/src/fmod_event.cpp"),
            Object(NonMatching, "fmod/src/fmod_eventi.cpp"),
            Object(NonMatching, "fmod/src/fmod_eventsystemi.cpp"),
            Object(NonMatching, "fmod/src/fmod_eventcategoryi.cpp"),
            Object(NonMatching, "fmod/src/fmod_eventparameteri.cpp"),
            Object(NonMatching, "fmod/src/fmod_eventprojecti.cpp"),
            Object(NonMatching, "fmod/src/fmod_eventgroupi.cpp"),
            Object(NonMatching, "fmod/src/fmod_eventenvelope.cpp"),
            Object(NonMatching, "fmod/src/fmod_eventimpl_complex.cpp"),
            Object(NonMatching, "fmod/src/fmod_eventimpl_simple.cpp"),
            Object(NonMatching, "fmod/src/fmod_eventinstancepool.cpp"),
            Object(NonMatching, "fmod/src/fmod_eventlayer.cpp"),
            Object(NonMatching, "fmod/src/fmod_eventreverb.cpp"),
            Object(NonMatching, "fmod/src/fmod_eventsound.cpp"),
            Object(NonMatching, "fmod/src/fmod_eventuserproperty.cpp"),
        ],
    },
    {
        "lib": "Bink",
        "mw_version": config.linker_version,
        "cflags": cflags_runtime,
        "progress_category": "sdk",  # str | List[str]
        "objects": [
            Object(NonMatching, "bink/src/binkwii.c"),
            Object(NonMatching, "bink/src/binkread.cpp"),
            Object(NonMatching, "bink/src/wiiax.cpp"),
            Object(NonMatching, "bink/src/wiifile.cpp"),
            Object(NonMatching, "bink/src/binkacd.cpp"),
            Object(NonMatching, "bink/src/radcb.cpp"),
        ],
    },
    {
        "lib": "MSL_C",
        "mw_version": config.linker_version,
        "cflags": cflags_runtime,
        "progress_category": "sdk",
        "host": False,
        "objects": [
            Object(NonMatching, "Runtime/__mem.c"),
            Object(Matching, "Runtime/__va_arg.c"),
            Object(NonMatching, "Runtime/global_destructor_chain.c"),
            Object(NonMatching, "Runtime/New.cp"),
            Object(NonMatching, "Runtime/NMWException.cp"),
            Object(Matching, "Runtime/CPlusLibPPC.cp"),
            Object(NonMatching, "Runtime/ptmf.c"),
            Object(NonMatching, "Runtime/runtime.c"),
            Object(NonMatching, "Runtime/__init_cpp_exceptions.cpp"),
            Object(NonMatching, "Runtime/Gecko_ExceptionPPC.cp"),
            Object(NonMatching, "Runtime/GCN_mem_alloc.c"),
            Object(NonMatching,"MSL_C/MSL_Common/alloc.c"),
            Object(NonMatching, "MSL_C/MSL_Common/errno.c"),
            Object(NonMatching,"MSL_C/MSL_Common/ansi_files.c"),
            Object(NonMatching,"MSL_C/MSL_Common/ansi_fp.c"),
            Object(NonMatching, "MSL_C/MSL_Common/char_io.c"),
            Object(NonMatching, "MSL_C/MSL_Common/ctype.c"),
            Object(NonMatching, "MSL_C/MSL_Common/locale.c"),
            Object(NonMatching, "MSL_C/MSL_Common/arith.c"),
            Object(NonMatching, "MSL_C/MSL_Common/buffer_io.c"),
            Object(NonMatching, "MSL_C/MSL_Common/direct_io.c"),
            Object(NonMatching, "MSL_C/MSL_Common/file_io.c"),
            Object(NonMatching, "MSL_C/MSL_Common/FILE_POS.C"),
            Object(NonMatching, "MSL_C/MSL_Common/mbstring.c"),
            Object(NonMatching, "MSL_C/MSL_Common/mem.c"),
            Object(NonMatching, "MSL_C/MSL_Common/mem_funcs.c"),
            Object(NonMatching, "MSL_C/MSL_Common/math_api.c"),
            Object(NonMatching, "MSL_C/MSL_Common/misc_io.c"),
            Object(NonMatching, "MSL_C/MSL_Common/printf.c"),
            Object(NonMatching, "MSL_C/MSL_Common/qsort.c"),
            Object(NonMatching, "MSL_C/MSL_Common/rand.c"),
            Object(NonMatching, "MSL_C/MSL_Common/float.c"),
            Object(NonMatching, "MSL_C/MSL_Common/scanf.c"),
            Object(NonMatching, "MSL_C/MSL_Common/string.c"),
            Object(NonMatching, "MSL_C/MSL_Common/strtold.c"),
            Object(NonMatching, "MSL_C/MSL_Common/strtoul.c"),
            Object(NonMatching, "MSL_C/MSL_Common/wctype.c"),
            Object(NonMatching, "MSL_C/MSL_Common/wmem.c"),
            Object(NonMatching, "MSL_C/MSL_Common/wprintf.c"),
            Object(NonMatching, "MSL_C/MSL_Common/wstring.c"),
            Object(NonMatching, "MSL_C/MSL_Common/wchar_io.c"),
            Object(NonMatching, "MSL_C/MSL_Common_Embedded/uart_console_io_gcn.c"),
            Object(NonMatching,"MSL_C/MSL_Common_Embedded/abort_exit_ppc_eabi.c"),
            Object(NonMatching,"MSL_C/MSL_Common_Embedded/secure_error.c"),
            Object(NonMatching,"MSL_C/MSL_Common_Embedded/math_sun.c"),
            Object(NonMatching,"MSL_C/MSL_Common_Embedded/Math/Double_precision/e_acos.c"),
            Object(NonMatching,"MSL_C/MSL_Common_Embedded/Math/Double_precision/e_asin.c"),
            Object(NonMatching,"MSL_C/MSL_Common_Embedded/Math/Double_precision/e_atan2.c"),
            Object(NonMatching,"MSL_C/MSL_Common_Embedded/Math/Double_precision/e_fmod.c"),
            Object(NonMatching,"MSL_C/MSL_Common_Embedded/Math/Double_precision/e_log.c"),
            Object(NonMatching,"MSL_C/MSL_Common_Embedded/Math/Double_precision/e_log10.c"),
            Object(NonMatching,"MSL_C/MSL_Common_Embedded/Math/Double_precision/e_pow.c"),
            Object(NonMatching,"MSL_C/MSL_Common_Embedded/Math/Double_precision/e_rem_pio2.c"),
            Object(NonMatching,"MSL_C/MSL_Common_Embedded/Math/Double_precision/k_cos.c"),
            Object(NonMatching,"MSL_C/MSL_Common_Embedded/Math/Double_precision/k_rem_pio2.c"),
            Object(NonMatching,"MSL_C/MSL_Common_Embedded/Math/Double_precision/k_sin.c"),
            Object(NonMatching,"MSL_C/MSL_Common_Embedded/Math/Double_precision/k_tan.c"),
            Object(NonMatching,"MSL_C/MSL_Common_Embedded/Math/Double_precision/s_atan.c"),
            Object(NonMatching,"MSL_C/MSL_Common_Embedded/Math/Double_precision/s_ceil.c"),
            Object( NonMatching,"MSL_C/MSL_Common_Embedded/Math/Double_precision/s_copysign.c"),
            Object(NonMatching,"MSL_C/MSL_Common_Embedded/Math/Double_precision/s_cos.c"),
            Object(NonMatching,"MSL_C/MSL_Common_Embedded/Math/Double_precision/s_floor.c"),
            Object(NonMatching,"MSL_C/MSL_Common_Embedded/Math/Double_precision/s_frexp.c"),
            Object(NonMatching,"MSL_C/MSL_Common_Embedded/Math/Double_precision/s_ldexp.c"),
            Object(NonMatching,"MSL_C/MSL_Common_Embedded/Math/Double_precision/s_modf.c"),
            Object(NonMatching,"MSL_C/MSL_Common_Embedded/Math/Double_precision/s_sin.c"),
            Object(NonMatching,"MSL_C/MSL_Common_Embedded/Math/Double_precision/s_tan.c"),
            Object(NonMatching,"MSL_C/MSL_Common_Embedded/Math/Double_precision/w_acos.c"),
            Object(NonMatching,"MSL_C/MSL_Common_Embedded/Math/Double_precision/w_asin.c"),
            Object(NonMatching,"MSL_C/MSL_Common_Embedded/Math/Double_precision/w_atan2.c"),
            Object(NonMatching,"MSL_C/MSL_Common_Embedded/Math/Double_precision/w_fmod.c"),
            Object(NonMatching,"MSL_C/MSL_Common_Embedded/Math/Double_precision/w_log10.c"),
            Object(NonMatching,"MSL_C/MSL_Common_Embedded/Math/Double_precision/w_pow.c"),
            Object(NonMatching,"MSL_C/MSL_Common_Embedded/Math/Double_precision/e_sqrt.c"),
            Object(NonMatching, "MSL_C/PPC_EABI/math_ppc.c"),
            Object(NonMatching,"MSL_C/MSL_Common_Embedded/Math/Double_precision/w_sqrt.c"),
            Object(NonMatching, "MSL_C/MSL_Common/extras.c"),
        ],
    },
    {
        "lib": "TRK_MINNOW_DOLPHIN",
        "mw_version": config.linker_version,
        "cflags": cflags_runtime,
        "progress_category": "sdk",
        "host": False,
        "objects": [
            Object(NonMatching,"debugger/embedded/MetroTRK/Processor/ppc/Export/targsupp.s"),
            Object(NonMatching,"gamedev/cust_connection/cc/exi2/GCN/EXI2_GDEV_GCN/main.c"),
            Object(NonMatching,"gamedev/cust_connection/utils/gc/MWCriticalSection_gc.c"),
            Object(NonMatching,"gamedev/cust_connection/utils/common/CircleBuffer.c"),
            Object(NonMatching,"debugger/embedded/MetroTRK/Processor/ppc/Generic/flush_cache.c"),
            Object(NonMatching,"debugger/embedded/MetroTRK/Portable/main_TRK.c"),
            Object(NonMatching,"debugger/embedded/MetroTRK/Portable/mainloop.c"),
            Object(NonMatching,"debugger/embedded/MetroTRK/Portable/mem_TRK.c"),
            Object(NonMatching,"debugger/embedded/MetroTRK/Portable/dispatch.c"),
            Object(NonMatching,"debugger/embedded/MetroTRK/Os/dolphin/dolphin_trk.c"),
            Object(NonMatching,"debugger/embedded/MetroTRK/Os/dolphin/dolphin_trk_glue.c"),
            Object(NonMatching,"debugger/embedded/MetroTRK/Portable/notify.c"),
            Object(NonMatching,"debugger/embedded/MetroTRK/Portable/nubevent.c"),
            Object(NonMatching,"debugger/embedded/MetroTRK/Portable/nubinit.c"),
            Object(NonMatching,"debugger/embedded/MetroTRK/Portable/serpoll.c"),
            Object(NonMatching,"debugger/embedded/MetroTRK/Portable/string_TRK.c"),
            Object(NonMatching,"debugger/embedded/MetroTRK/Portable/support.c"),
            Object(NonMatching,"debugger/embedded/MetroTRK/Os/dolphin/targcont.c"),
            Object(NonMatching,"debugger/embedded/MetroTRK/Processor/ppc/Generic/mpc_7xx_603e.c"),
            Object(NonMatching,"debugger/embedded/MetroTRK/Portable/msg.c"),
            Object(NonMatching,"debugger/embedded/MetroTRK/Portable/msgbuf.c"),
            Object(NonMatching,"debugger/embedded/MetroTRK/Portable/msghndlr.c"),
            Object(NonMatching,"debugger/embedded/MetroTRK/Export/mslsupp.c"),
            Object(NonMatching,"debugger/embedded/MetroTRK/Processor/ppc/Generic/targimpl.c"),
            Object(NonMatching,"debugger/embedded/MetroTRK/Os/dolphin/target_options.c"),
            Object(NonMatching,"debugger/embedded/MetroTRK/Processor/ppc/Generic/__exception.s"),
        ],
    },
    {
        "lib": "Runtime.PPCEABI.H",
        "mw_version": config.linker_version,
        "cflags": cflags_runtime,
        "progress_category": "sdk",  # str | List[str]
        "objects": [
            Object(NonMatching, "PowerPC_EABI_Support/Runtime/Src/global_destructor_chain.c"),
            Object(NonMatching, "PowerPC_EABI_Support/Runtime/Src/__init_cpp_exceptions.cpp"),
        ],
    },
]


# Optional callback to adjust link order. This can be used to add, remove, or reorder objects.
# This is called once per module, with the module ID and the current link order.
#
# For example, this adds "dummy.c" to the end of the DOL link order if configured with --non-matching.
# "dummy.c" *must* be configured as a Matching (or Equivalent) object in order to be linked.
def link_order_callback(module_id: int, objects: List[str]) -> List[str]:
    # Don't modify the link order for matching builds
    if not config.non_matching:
        return objects
    if module_id == 0:  # DOL
        return objects + ["dummy.c"]
    return objects

# Uncomment to enable the link order callback.
# config.link_order_callback = link_order_callback


# Optional extra categories for progress tracking
# Adjust as desired for your project
config.progress_categories = [
    ProgressCategory("game", "Game Code"),
    ProgressCategory("sdk", "SDK Code"),
    ProgressCategory("Rev SDK", "Revolution SDK"),
    ProgressCategory("engine", "Engine Code"),
]
config.progress_each_module = args.verbose
# Optional extra arguments to `objdiff-cli report generate`
config.progress_report_args = [
    # Marks relocations as mismatching if the target value is different
    # Default is "functionRelocDiffs=none", which is most lenient
    # "--config functionRelocDiffs=data_value",
]

if args.mode == "configure":
    # Write build.ninja and objdiff.json
    generate_build(config)
elif args.mode == "progress":
    # Print progress information
    calculate_progress(config)
else:
    sys.exit("Unknown mode: " + args.mode)
